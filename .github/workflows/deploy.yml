name: Deploy to ECS via CodeDeploy

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  CLUSTER_NAME: strapi-cluster-bhr
  SERVICE_NAME: strapi-service
  TASK_DEF_NAME: strapi-task
  CONTAINER_NAME: strapi
  CONTAINER_PORT: 1337
  DEPLOYMENT_GROUP_NAME: strapi-deploy-group
  DEPLOYMENT_APP_NAME: strapi-codedeploy-app-bhr

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Get new image tag (commit SHA)
      id: new_tag
      run: echo "tag=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

    - name: Register new ECS task definition
      id: task_def
      run: |
        task_def=$(aws ecs register-task-definition \
          --cli-input-json file://ecs-task-def.json \
          --query "taskDefinition.taskDefinitionArn" --output text)
        echo "TASK_DEF_ARN=$task_def" >> "$GITHUB_ENV"

    - name: Create appspec.yaml
      run: |
        cat <<EOF > appspec.yaml
        version: 1.0
        Resources:
          - TargetService:
              Type: AWS::ECS::Service
              Properties:
                TaskDefinition: ${TASK_DEF_ARN}
                LoadBalancerInfo:
                  ContainerName: "${{ env.CONTAINER_NAME }}"
                  ContainerPort: ${{ env.CONTAINER_PORT }}
        EOF
         base64 appspec.yaml | tr -d '\n'
     
    - name: Deploy using CodeDeploy
      run: |
        aws ecs create-service \
        --cluster strapi-cluster-bhr \
        --service-name strapi-service \
        --task-definition strapi-task:264 \
        --load-balancers "targetGroupArn=arn:aws:elasticloadbalancing:us-east-2:607700977843:targetgroup/strapi-target-group-bhr/467b00dce5907580,containerName=strapi,containerPort=1337" \
        --desired-count 1 \
        --deployment-controller type=CODE_DEPLOY \
        --launch-type FARGATE \
        --network-configuration "awsvpcConfiguration={subnets=[subnet-03e27b60efa8df9f0,subnet-024126fd1eb33ec08],securityGroups=[sg-08ec25a813a7da742],assignPublicIp=ENABLED}"

      continue-on-error: true