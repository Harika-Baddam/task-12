name: Deploy Strapi to ECS via CodeDeploy

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  AWS_ACCOUNT_ID: "607700977843"
  ECR_REPOSITORY: projects-bhr
  ECS_CLUSTER: strapi-cluster-bhr
  ECS_SERVICE: strapi-service
  TASK_DEF_FAMILY: strapi-task
  CODE_DEPLOY_APP: strapi-codedeploy-bhr
  DEPLOYMENT_GROUP: strapi-deployment-group

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        run: aws ecr get-login-password | docker login --username AWS --password-stdin 607700977843.dkr.ecr.us-east-2.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker build -t 607700977843.dkr.ecr.us-east-2.amazonaws.com/projects-bhr:latest .
          docker push 607700977843.dkr.ecr.us-east-2.amazonaws.com/projects-bhr:latest

      - name: Set TASK_DEF_NAME
        run: echo "TASK_DEF_NAME=ecs-task-def" >> $GITHUB_ENV
 

      - name: Create new task definition file
        run: |
          aws ecs describe-task-definition \
          --task-definition arn:aws:ecs:us-east-2:607700977843:task-definition/strapi-task:183
          cat ecs-task-def.json | jq --arg IMAGE "607700977843.dkr.ecr.us-east-2.amazonaws.com/projects-bhr:latest" \
            '.taskDefinition.containerDefinitions[0].image = $IMAGE | 
             {family: .taskDefinition.family, containerDefinitions: .taskDefinition.containerDefinitions, executionRoleArn: .taskDefinition.executionRoleArn, networkMode: .taskDefinition.networkMode, requiresCompatibilities: .taskDefinition.requiresCompatibilities, cpu: .taskDefinition.cpu, memory: .taskDefinition.memory}' > new-task-def.json
    
      - name: Save Task Definition
        run: |
          cat <<EOF > task-def.json
          {
            "family": "strapi-task",
            "executionRoleArn": "arn:aws:iam::607700977843:role/ecsTaskExecutionRole",
            "networkMode": "awsvpc",
            "requiresCompatibilities": ["FARGATE"],
            "cpu": "512",
            "memory": "1024",
            "containerDefinitions": [
          {
            "name": "strapi",
            "image": "607700977843.dkr.ecr.us-east-2.amazonaws.com/projects-bhr:latest",
            "portMappings": [
            {
              "containerPort": 1337,
              "hostPort": 1337,
              "protocol": "tcp"
            }
          ],
          "logConfiguration": {
            "logDriver": "awslogs",
            "options": {
              "awslogs-group": "/ecs/strapi",
              "awslogs-region": "us-east-2",
              "awslogs-stream-prefix": "strapi"
            }
          }
          }
          ] 
          }
          EOF
      - name: Register new task definition
        run: |
           new_revision_number=$(date +%s)
           echo "New revision number: $new_revision_number"

           aws ecs register-task-definition \
           --cli-input-json file://ecs-task-def.json

           aws ecs update-service \
           --cluster strapi-cluster-bhr \
           --service strapi-service \
            --task-definition strapi-task

       
      - name: Generate appspec file
        run: |
          new_revision_number=$(date +%s)
          echo "Using revision $new_revision_number"

          cat <<EOF > appspec.yaml
          version: 1.0
          Resources:
          - TargetService:
            Type: AWS::ECS::Service
            Properties:
            TaskDefinition: $TASK_DEF_ARN
            LoadBalancerInfo:
              ContainerName: "$CONTAINER_NAME"
               ContainerPort: $CONTAINER_PORT
            EOF

      - name: Create ECS Service
        run: |
          new_revision_number=$(date +%s)
          echo "New revision number: $new_revision_number"
          aws ecs create-service \
          --cluster strapi-cluster-bhr \
          --service-name strapi-service \
          --task-definition strapi-task:<new_revision_number> \
          --load-balancers "targetGroupArn=arn:aws:elasticloadbalancing:us-east-2:607700977843:targetgroup/strapi-target-group-bhr/467b00dce5907580,containerName=strapi,containerPort=1337" \
          --desired-count 1 \
          --deployment-controller type=CODE_DEPLOY \
          --launch-type FARGATE \
          --network-configuration "awsvpcConfiguration={subnets=[subnet-03e27b60efa8df9f0,subnet-024126fd1eb33ec08],securityGroups=[sg-08ec25a813a7da742],assignPublicIp=ENABLED}"


        continue-on-error: true 



