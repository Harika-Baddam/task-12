name: Deploy Strapi to ECS with CodeDeploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: projects-bhr
  CLUSTER_NAME: strapi-cluster-bhr
  SERVICE_NAME: strapi-service
  TASK_DEF_NAME: strapi-task
  CONTAINER_NAME: strapi
  DEPLOYMENT_GROUP: strapi-deploy-group-bhr
  APPLICATION_NAME: strapi-codedeploy-app-bhr

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get latest task definition
        id: task-def
        run: |
          aws ecs describe-task-definition --task-definition $TASK_DEF_NAME > task-def.json

      - name: Update task definition image
        id: new-task-def
        run: |
          jq --arg IMAGE "607700977843.dkr.ecr.us-east-2.amazonaws.com/projects-bhr:latest:${{ github.sha }}" \
             '.taskDefinition.containerDefinitions[0].image = $IMAGE' \
             task-def.json > new-task-def.json

          NEW_REVISION=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query "taskDefinition.taskDefinitionArn" \
            --output text)

          echo "NEW_REVISION=$NEW_REVISION" >> $GITHUB_ENV

      - name: Create base64 appspec content
        id: appspec
        run: |
          echo 'version: 1.0
          Resources:
          - TargetService:
              Type: AWS::ECS::Service
            Properties:
             TaskDefinition: '"$NEW_REVISION"'
               LoadBalancerInfo:
                  ContainerName: '"$CONTAINER_NAME"'
                  ContainerPort: 1337' > appspec.yaml

          ENCODED=$(base64 appspec.yaml | tr -d '\n')
          echo "APPSPEC_BASE64=$ENCODED" >> $GITHUB_ENV

      - name: Create deployment in CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name $APPLICATION_NAME \
            --deployment-group-name $DEPLOYMENT_GROUP \
            --revision revisionType=AppSpecContent,appSpecContent="{content=${{ env.APPSPEC_BASE64 }}}" \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce
