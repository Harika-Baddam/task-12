name: Deploy Strapi to ECS via CodeDeploy

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: projects-bhr
  ECS_CLUSTER: strapi-cluster-bhr
  ECS_SERVICE: strapi-service
  TASK_DEF_FAMILY: strapi-task
  CODE_DEPLOY_APP: strapi-codedeploy-bhr
  DEPLOYMENT_GROUP: strapi-deployment-group

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        run: aws ecr get-login-password | docker login --username AWS --password-stdin 607700977843.dkr.ecr.us-east-2.amazonaws.com

      - name: Build, Tag, and Push Docker Image
        id: build
        run: |
          docker build -t baddamharika/strapi-app .
          docker tag baddamharika/strapi-app:latest 607700977843.dkr.ecr.us-east-2.amazonaws.com/projects-bhr:latest
          docker push 607700977843.dkr.ecr.us-east-2.amazonaws.com/projects-bhr:latest
          echo "revision=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Register AppSpec revision
        run: |
            aws deploy register-application-revision \
            --application-name strapi-codedeploy-bhr \
            --description "Registering new revision" \
            --s3-location bucket=your-bucket-name,key=appspec.yaml,bundleType=yaml
      - name: Create appspec.yaml
        run: |
          echo "version: 1.0" > appspec.yaml
          echo "Resources:" >> appspec.yaml
          echo "- TargetService:" >> appspec.yaml
          echo "    Type: AWS::ECS::Service" >> appspec.yaml
          echo "    Properties:" >> appspec.yaml
          echo "      TaskDefinition: arn:aws:iam::607700977843:role/ecsTaskExecutionRole/strapi-task:${{ steps.build.outputs.revision }}" >> appspec.yaml
          echo "      LoadBalancerInfo:" >> appspec.yaml
          echo "        ContainerName: strapi" >> appspec.yaml
          echo "        ContainerPort: 1337" >> appspec.yaml

      - name: Create CodeDeploy Deployment
        run: |
            aws deploy create-deployment \
            --application-name strapi-codedeploy-bhr \
            --deployment-group-name strapi-codedeploy-group \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --description "Deploying new revision"
            

      - name: (Optional) Monitor Deployment Status
        run: |
          echo "Deployment created successfully with new image: 607700977843.dkr.ecr.us-east-2.amazonaws.com/strapi-app:latest"
          # Add polling logic here if needed for prod deployments
